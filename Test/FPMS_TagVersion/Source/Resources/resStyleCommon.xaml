<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
                    xmlns:Microsoft_Windows_Themes1="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <!--xmlns:local="clr-namespace:EmWorks.App.Evi">-->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="resBrushColor.xaml" />
        <ResourceDictionary Source="resIconPathData.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Common -->
    <FontFamily x:Key="Segoe UI">Segoe UI</FontFamily>

    <!--#region Ellipse -->
    <Style x:Key="EllipseStatus" TargetType="{x:Type Ellipse}">
        <Setter Property="Stroke" Value="Maroon" />
        <Setter Property="StrokeThickness" Value="2" />
        <Setter Property="Margin" Value="5,5,5,5" />
    </Style>
    <Style x:Key="EllipseStatus2" TargetType="{x:Type Ellipse}">
        <Setter Property="Stroke" Value="Maroon" />
        <Setter Property="StrokeThickness" Value="4" />
        <Setter Property="Margin" Value="8,8,8,8" />
    </Style>
    <Style x:Key="EllipseStatus3" TargetType="{x:Type Ellipse}">
        <Setter Property="Fill" Value="Maroon" />
    </Style>

    <!--#endregion-->
    
    <!--#region GridSplitter -->
    <Style x:Key="gstEnc" TargetType="{x:Type GridSplitter}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="2" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="{DynamicResource colorBgDialogLineENC}" />
    </Style>
    <Style x:Key="gstRed" TargetType="{x:Type GridSplitter}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="#FFED6464" />
    </Style>
    <Style x:Key="gstGreen" TargetType="{x:Type GridSplitter}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="#FFEAB465" />
    </Style>
    <Style x:Key="gstBlue" TargetType="{x:Type GridSplitter}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="#FF6595EA" />
    </Style>
    <!--#endregion-->

    <!--#region Frame-->
    <Style x:Key="dlgBgWindow" TargetType="{x:Type Window}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource colorBgDialogLine}" />
        <Setter Property="AllowsTransparency" Value="False" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Rectangle Fill="{DynamicResource colorBgDialog}">
                            <Rectangle.Effect>
                                <DropShadowEffect Color="DarkGray" BlurRadius="20" Direction="130" Opacity="0.2" ShadowDepth="8" />
                            </Rectangle.Effect>
                        </Rectangle>
                        <Rectangle Fill="{DynamicResource colorBgDialog}" Stroke="{TemplateBinding BorderBrush}">
                            <Rectangle.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="30" Direction="310" Opacity="0.5" ShadowDepth="8" />
                            </Rectangle.Effect>
                        </Rectangle>
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard  Storyboard.TargetProperty="Opacity">
                        <DoubleAnimation From="0" To="1" Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="dlgBgDailog" TargetType="{x:Type Window}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource colorBgDialogLine}" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Topmost" Value="True" />
        <Setter Property="SizeToContent" Value="Height" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Rectangle Fill="{DynamicResource colorBgDialog}" Margin="20">
                            <Rectangle.Effect>
                                <DropShadowEffect Color="DarkGray" BlurRadius="20" Direction="130" Opacity="0.2" ShadowDepth="8" />
                            </Rectangle.Effect>
                        </Rectangle>
                        <Rectangle Fill="{DynamicResource colorBgDialog}" Stroke="{TemplateBinding BorderBrush}" Margin="20">
                            <Rectangle.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="30" Direction="310" Opacity="0.5" ShadowDepth="8" />
                            </Rectangle.Effect>
                        </Rectangle>
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard  Storyboard.TargetProperty="Opacity">
                        <DoubleAnimation From="0" To="1" Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="dlgBgDailogNoMargin" TargetType="{x:Type Window}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource colorBgDialogLine}" />
        <Setter Property="AllowsTransparency" Value="False" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Topmost" Value="True" />
        <Setter Property="SizeToContent" Value="Height" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Rectangle Fill="{DynamicResource colorBgDialog}">
                            <Rectangle.Effect>
                                <DropShadowEffect Color="DarkGray" BlurRadius="20" Direction="130" Opacity="0.2" ShadowDepth="8" />
                            </Rectangle.Effect>
                        </Rectangle>
                        <Rectangle Fill="{DynamicResource colorBgDialog}" Stroke="{TemplateBinding BorderBrush}">
                            <Rectangle.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="30" Direction="310" Opacity="0.5" ShadowDepth="8" />
                            </Rectangle.Effect>
                        </Rectangle>
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard  Storyboard.TargetProperty="Opacity">
                        <DoubleAnimation From="0" To="1" Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="recBgDailogMain" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{DynamicResource colorBgDialogContents}" />
        <Setter Property="Margin" Value="8" />
    </Style>
    <!--#endregion-->

    <!--#region Label -->
    <Style x:Key="lblDialogTitle" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblDialogTitle}" />
    </Style>
    <Style x:Key="lblNormal" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblMain}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <ContentPresenter x:Name="Mainlbl" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2" Width="auto">
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Content, ElementName=Mainlbl}" TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="lblBold" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblDialogTitle}" />
    </Style>
    <Style x:Key="lblInformationTitle" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblMain}" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <ContentPresenter x:Name="Mainlbl" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2" Width="auto">
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Content, ElementName=Mainlbl}" TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="lblContentName" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblMain}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <ContentPresenter x:Name="Mainlbl" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2" Width="auto">
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Content, ElementName=Mainlbl}" TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="lblContentData" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblMain}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <ContentPresenter x:Name="Mainlbl" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2" Width="auto">
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Content, ElementName=Mainlbl}" TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="lblStatus" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <!--<Setter Property="FontWeight" Value="Bold" />-->
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <ContentPresenter x:Name="Mainlbl" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2" Width="auto">
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Content, ElementName=Mainlbl}" TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="lblPlat" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="8" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource colorENC}" />
    </Style>
    <!--#endregion-->

    <!--#region Border -->
    <Style x:Key="brdFov" TargetType="{x:Type Border}">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Margin" Value="0,0,1,1" />
    </Style>
    <!--#endregion-->

    <!--#region Button -->
    <Style x:Key="btnNormalBlack" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource colorBgDialog}" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblBtn}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBtnMainNormal_H}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBtnMainNormal_S}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btnNormalENC" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource colorBgSubMenu}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorENC_MouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorENC_Pressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btnDialogNormal" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource colorBtnMainNormal_N}" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblBtn}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBtnMainNormal_H}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBtnMainNormal_S}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btnNormal" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource colorBtnMainNormal_N}" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblBtn}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBtnMainNormal_H}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBtnMainNormal_S}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btnMinimize" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="42" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="42" />
        <Setter Property="Foreground" Value="{DynamicResource colorTopBar_N}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorTransparent}" />
                        <Path Data="{DynamicResource icoMinimize}" Fill="{TemplateBinding Foreground}" Width="16" Height="3" Stretch="Fill" Margin="0,10,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnTopBar_P}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_P}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnMax" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="42" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="42" />
        <Setter Property="Foreground" Value="{DynamicResource colorTopBar_N}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorTransparent}" />
                        <Path Data="{DynamicResource icoMax}" Fill="{TemplateBinding Foreground}" Width="16" Height="16" Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnTopBar_P}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_P}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnWindowNormal" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="42" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="42" />
        <Setter Property="Foreground" Value="{DynamicResource colorTopBar_N}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorTransparent}" />
                        <Path Data="{DynamicResource icoWindowNormal}" Fill="{TemplateBinding Foreground}" Width="16" Height="16" Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnTopBar_P}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_P}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnClose" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="42" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="42" />
        <Setter Property="Foreground" Value="{DynamicResource colorTopBar_N}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorTransparent}" />
                        <Path Data="{DynamicResource icoClose}" Fill="{TemplateBinding Foreground}" Width="16" Height="16" Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnTopBar_P}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_P}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnAlarm" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Grid.Background>
                            <ImageBrush ImageSource="Images/Common/Icon/AlarmGray.png" Stretch="Fill" />
                        </Grid.Background>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnOpen" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="48" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Foreground" Value="{DynamicResource colorTopBar_N}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorTransparent}" />
                        <Path Data="{DynamicResource icoFolder}" Fill="{TemplateBinding Foreground}" Width="24" Height="24" Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnTopBar_P}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_P}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnInRobot" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="150" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Grid.Background>
                            <ImageBrush ImageSource="Images/Window/Maintenance/InRobot.png" Stretch="Fill" />
                        </Grid.Background>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnInShuttle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Grid.Background>
                            <ImageBrush ImageSource="Images/Window/Maintenance/InShuttle.png" Stretch="Fill" />
                        </Grid.Background>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnMoveShuttle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Grid.Background>
                            <ImageBrush ImageSource="Images/Window/Maintenance/MoveShuttle.png" Stretch="Fill" />
                        </Grid.Background>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnBCR" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Grid.Background>
                            <ImageBrush ImageSource="Images/Window/Maintenance/MCR.png" Stretch="Fill" />
                        </Grid.Background>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnConfig" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="42" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="42" />
        <Setter Property="Foreground" Value="{DynamicResource colorTopBar_N}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorTransparent}" />
                        <Path Data="{DynamicResource icoSimpleSetting}" Fill="{TemplateBinding Foreground}" Width="16" Height="16" Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnTopBar_P}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorTopBar_P}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Image Button-->
    <Style x:Key="tgbRamp" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorLblBtn}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment"  Value="Bottom" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Path Name="bg" Fill="Maroon" Stroke="White" StrokeThickness="1" Stretch="Fill">
                            <Path.Data>
                                <EllipseGeometry Center="50,50" RadiusX="50" RadiusY="50" />
                            </Path.Data>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="Green" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="bg" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbCellRamp" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorLblBtn}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment"  Value="Bottom" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Path Name="bg" Fill="LightGray" Stroke="White" StrokeThickness="1" Stretch="Fill">
                            <Path.Data>
                                <EllipseGeometry Center="50,50" RadiusX="50" RadiusY="50" />
                            </Path.Data>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="Green" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="bg" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ibtRamp" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Path Fill="Green" Stroke="White" StrokeThickness="1" Stretch="Fill" Margin="5,-5.5,1.5,11.5">
                        <Path.Data>
                            <EllipseGeometry Center="50,50" RadiusX="50" RadiusY="50" />
                        </Path.Data>
                        <Path.Style>
                            <Style TargetType="{x:Type Path}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Stroke" Value="White" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Stroke" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ibtMotion" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid">
                        <Grid.Background>
                            <ImageBrush ImageSource="Images/Common/Device/DeviceMotion.png" Stretch="Fill" />
                        </Grid.Background>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Divider-->
    <Style x:Key="divCommon" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{DynamicResource colorDivMain}" />
    </Style>
    <Style x:Key="divSearchOption" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{DynamicResource colorDivSearchOptions}" />
    </Style>
    <!--#endregion-->

    <!--#region Password Box -->
    <Style x:Key="pwbGeneral" TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="32" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblTxb}" />
        <Setter Property="CaretBrush" Value="{DynamicResource colorLblTxb}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource colorLblTxbSelection}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="12,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border Name="Bd" Background="{DynamicResource colorTxb_N}" BorderBrush="{DynamicResource colorTxbLine_N}" BorderThickness="1" />
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" VerticalAlignment="Center" HorizontalAlignment="Left" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource colorTxb_H}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource colorTxbLine_H}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource colorTxb_P}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource colorTxbLine_P}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource colorTxb_P}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource colorTxbLine_P}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TextBlock -->
    <Style x:Key="txbNomal" TargetType="{x:Type TextBlock}">
        <Setter Property="LineStackingStrategy" Value="MaxHeight" />
        <Setter Property="MaxHeight" Value="40" />
    </Style>
    <Style x:Key="txbBlack" TargetType="{x:Type TextBlock}">
        <Setter Property="LineStackingStrategy" Value="MaxHeight" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    </Style>
    <!--#endregion-->

    <!--#region Toggle Button-->
    <Style x:Key="tgbNormal" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorLblBtn}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment"  Value="Bottom" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorToggleUnChecked}" />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorToggleMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorToggleChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorToggleChecked}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="tgbbtnNormal" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorBtnMainNormal_N}" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="tgbFullforBlack" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorToggleUnChecked}" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbNormalforBlack" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value ="{DynamicResource colorBgDialog}" />
        <Setter Property="Foreground" Value ="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorGrdBgMain}" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                            <Setter Property="FontSize" Value="15" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbNormalforBlackL" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorToggleUnChecked}" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorToggleUnChecked}" Width="2" HorizontalAlignment="Left" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbNormalforBlackR" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorToggleUnChecked}" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorToggleUnChecked}" Width="2" HorizontalAlignment="Right" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbNormalforBlackT" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorToggleUnChecked}" />
                        <Rectangle Name="Line" Fill="{DynamicResource colorToggleUnChecked}" Height="2" VerticalAlignment="Top" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Line" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="Line" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbNormalforBlackB" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorToggleUnChecked}" />
                        <Rectangle Name="Line" Fill="{DynamicResource colorToggleUnChecked}" Height="2" VerticalAlignment="Bottom" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Line" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="Line" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="tgbControlforBL" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="tgbControlStart" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoStart}" Fill="{TemplateBinding Background}" Width="18" Height="18" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-3,-2,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbControlStop" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoStop}" Fill="{TemplateBinding Background}" Width="18" Height="18" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-3,-2,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbControlPause" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoPause}" Fill="{TemplateBinding Background}" Width="18" Height="18" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-3,-2,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbControlResume" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoResume}" Fill="{TemplateBinding Background}" Width="18" Height="18" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-3,-2,4,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbControlAbort" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoAbort}" Fill="{TemplateBinding Background}" Width="18" Height="18" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-3,-2,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="tgbControlMaint" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoSetting}" Fill="{TemplateBinding Background}" Width="14" Height="14" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-3,-2,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbControlRecipe" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoPaste}" Fill="{TemplateBinding Background}" Width="16" Height="16" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-1,-2,4,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbControlData" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoSearch}" Fill="{TemplateBinding Background}" Width="16" Height="16" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-1,-2,4,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbControlInitialize" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoReturn01}" Fill="{TemplateBinding Background}" Width="16" Height="16" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-1,-2,4,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbControlShutdown" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoShutdown}" Fill="#FFE0A2A2" Width="16" Height="16" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-1,-2,4,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="tgbControlSubMenuText" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="Background" Value="{DynamicResource colorControlUnSelect}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="0.7*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="bg" Fill="{DynamicResource colorControlBg}" Grid.ColumnSpan="2" />
                        <Rectangle Name="leftLine" Fill="{DynamicResource colorControlBg}" Width="2" HorizontalAlignment="Left" />
                        <Path Data="{DynamicResource icoCircleFrontText}" Fill="{TemplateBinding Background}" Width="4" Height="4" Stretch="Fill" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Margin ="-5,-4,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlMove}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorControlMove}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorToggleUnChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorControlSelect}" />
                            <Setter Property="Fill" TargetName="leftLine" Value="{DynamicResource colorENC}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgbAlarm" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/FPMS.E2105_FS111_121;component/Resources/Images/Common/Icon/AlarmGray.png"
                  Stretch="Uniform"
                  TileMode="None" />
                <!--Todo:프로젝트 주소로 동적으로 가져오게.-->
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}"
                Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked"
              Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/FPMS.E2105_FS111_121;component/Resources/Images/Common/Icon/AlarmRed.png"
                      Stretch="Uniform"
                      TileMode="None" />
                        <!--Todo:프로젝트 주소로 동적으로 가져오게.-->
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Radio Button-->
    <Style x:Key="rdbNormalforWhite" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Ellipse Name="frame" Width="18" Height="18" Fill="{DynamicResource colorChkRdoFrame_N}" Stroke="{DynamicResource colorENC}" />
                        <Ellipse Name="bullet" Width="10" Height="10" Fill="{DynamicResource colorENC}" Opacity="0" />
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="8,0,4,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_S}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_S}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                            <Setter Property="Opacity" Value="1" TargetName="bullet" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="bullet" Value="{DynamicResource colorChkRdoBullet_SH}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="rdbNormalforBlack" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Ellipse Name="frame" Width="18" Height="18" Fill="{DynamicResource colorChkRdoFrame_N}" Stroke="{DynamicResource colorENC}" />
                        <Ellipse Name="bullet" Width="10" Height="10" Fill="{DynamicResource colorENC}" Opacity="0" />
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="8,0,4,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_S}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_S}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                            <Setter Property="Opacity" Value="1" TargetName="bullet" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="bullet" Value="{DynamicResource colorChkRdoBullet_SH}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="rdbToggleTypeforBlack" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Rectangle Name="bg" Fill="{DynamicResource colorToggleUnChecked}" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                            <Setter Property="FontSize" Value="20" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="rdbToggleTypeforEllipseType1" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Ellipse Name="bg" Fill="CadetBlue" Stroke="Black" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{StaticResource colorLblTxbSelection}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{StaticResource colorLblTxbSelection}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{StaticResource colorENC_Pressed}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{StaticResource colorENC_Pressed}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="rdbToggleTypeforEllipseType2" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Ellipse Name="bg" Fill="CadetBlue" Stroke="Black" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{StaticResource colorCheckBoxMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{StaticResource colorCheckBoxMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{StaticResource colorCheckBoxPressedColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{StaticResource colorCheckBoxPressedColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="rdbToggleTypeforTabControl" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Rectangle Name="bg" Fill="{DynamicResource colorToggleUnChecked}" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="rdbToggleTypeforTabControl2" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Rectangle Name="bg" Fill="{DynamicResource colorToggleUnChecked}" />
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBtnMainNormal_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorBgDialogContents}" />
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBgDialogLineENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource colorBgDialogContents}" />
                            <Setter Property="Fill" TargetName="bg" Value="{DynamicResource colorBgDialogLineENC}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource colorLblChkRdo_N}" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Ellipse Name="frame" Width="18" Height="18" Fill="{DynamicResource colorChkRdoFrame_N}" Stroke="{DynamicResource colorChkRdoFrameLine_N}" />
                        <Ellipse Name="bullet" Width="10" Height="10" Fill="{DynamicResource colorChkRdoBullet_S}" Opacity="0" />
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="8,0,4,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorChkRdoFrameLine_H}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorChkRdoFrameLine_H}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_S}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorChkRdoFrameLine_S}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_S}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorChkRdoFrameLine_S}" />
                            <Setter Property="Opacity" Value="1" TargetName="bullet" />
                            <Setter Property="Foreground" Value="{DynamicResource colorLblChkRdo_S}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="bullet" Value="{DynamicResource colorChkRdoBullet_SH}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Check Box-->
    <Style x:Key="chkNormalforWhite" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="frame" Width="20" Height="20" Fill="{DynamicResource colorChkRdoFrame_N}" Stroke="{DynamicResource colorENC}" />
                        <Path Name="bullet"  Width="14" Height="12" Fill="{DynamicResource colorChkRdoBullet_S}" Stretch="Fill" Data="{DynamicResource icoChkBullet}" Opacity="0" />
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="8,0,4,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_S}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorENC}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                            <Setter Property="Opacity" Value="1" TargetName="bullet" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="bullet" Value="{DynamicResource colorChkRdoBullet_SH}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="chkNormalforBlack" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="frame" Width="20" Height="20" Fill="{DynamicResource colorChkRdoFrame_N}" Stroke="{DynamicResource colorENC}" />
                        <Path Name="bullet"  Width="14" Height="12" Fill="{DynamicResource colorChkRdoBullet_S}" Stretch="Fill" Data="{DynamicResource icoChkBullet}" Opacity="0" />
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="8,0,4,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_S}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorENC}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                            <Setter Property="Opacity" Value="1" TargetName="bullet" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="bullet" Value="{DynamicResource colorChkRdoBullet_SH}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="chkNormalforBlack2" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource colorRdbUnchecked}" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="frame" Width="20" Height="20" Fill="{DynamicResource colorChkRdoFrame_N}" Stroke="{DynamicResource colorENC}" />
                        <Path Name="bullet"  Width="14" Height="12" Fill="{DynamicResource colorChkRdoBullet_S}" Stretch="Fill" Data="{DynamicResource icoChkBullet}" Opacity="0" />
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="8,0,4,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_H}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorChkRdoFrame_S}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="frame" Value="{DynamicResource colorENC}" />
                            <Setter Property="Stroke" TargetName="frame" Value="{DynamicResource colorENC}" />
                            <Setter Property="Opacity" Value="1" TargetName="bullet" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="bullet" Value="{DynamicResource colorChkRdoBullet_SH}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Combo Box -->
    <Style x:Key="tgb_cmbGeneral" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" BorderThickness="1" BorderBrush="{DynamicResource colorCmbLine_N}" Background="{DynamicResource colorCmb_N}" SnapsToDevicePixels="true">
                        <Grid HorizontalAlignment="Right" Width="32">
                            <Path x:Name="Arrow" Data="{StaticResource icoCmbArrow_Down}" Fill="{DynamicResource colorIcon}" Stretch="Fill" Opacity="0.6" Width="12" Height="7" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{DynamicResource colorCmbLine_H}" />
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource colorCmb_H}" />
                            <Setter Property="Opacity" TargetName="Arrow"  Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{DynamicResource colorCmbLine_H}" />
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource colorCmb_H}" />
                            <Setter Property="Opacity" TargetName="Arrow"  Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{DynamicResource colorCmbLine_S}" />
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource colorCmb_S}" />
                            <Setter Property="Opacity" TargetName="Arrow"  Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{DynamicResource colorCmbLine_S}" />
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource colorCmb_S}" />
                            <Setter TargetName="Arrow" Property="Data" Value="{DynamicResource icoCmbArrow_Up}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity"  Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tgb_cmbGeneral_F" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" BorderThickness="1" BorderBrush="{DynamicResource colorCmbLine_S}" Background="{DynamicResource colorCmb_H}" SnapsToDevicePixels="true">
                        <Grid HorizontalAlignment="Right" Width="32">
                            <Path x:Name="Arrow" Data="{StaticResource icoCmbArrow_Down}" Fill="{DynamicResource colorIcon}" Stretch="Fill" Opacity="1" Width="12" Height="7" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Background" Value="{DynamicResource colorBgTableWhiteItem_N}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource colorBgTableWhiteItem_N}" />
    </Style>
    <Style x:Key="cmbWhite" TargetType="{x:Type ComboBox}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblCmbWhite_S}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource cmbWhiteItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Microsoft_Windows_Themes1:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource colorBgListWhiteLine}" BorderThickness="1" Background="{DynamicResource colorBgListWhite}" Margin="0,2">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes1:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="btn" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource tgb_cmbWhite}" />
                        <Label x:Name="InternalWatermarkLabel" Margin="12,0" Content="{TemplateBinding Tag}" Visibility="Collapsed" Focusable="False" Foreground="{DynamicResource colorLblBtn}" Opacity="0.7" VerticalAlignment="Center" />
                        <ContentPresenter x:Name="ContentSite" Margin="18,0" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="Left" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Bottom"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Style" TargetName="btn" Value="{StaticResource tgb_cmbWhite_F}" />
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                            <Setter Property="Color" TargetName="Shdw" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="InternalWatermarkLabel" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="tgb_cmbWhite" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" BorderThickness="1" BorderBrush="{DynamicResource colorCmbWhiteLine_N}" Background="{DynamicResource colorCmbWhite_N}" SnapsToDevicePixels="true">
                        <Grid HorizontalAlignment="Right" Width="32">
                            <Path x:Name="Arrow" Data="{StaticResource icoCmbArrow_Down}" Fill="{DynamicResource colorIcon}" Stretch="Fill" Opacity="0.6" Width="12" Height="7" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{DynamicResource colorCmbWhiteLine_H}" />
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource colorCmbWhite_H}" />
                            <Setter Property="Opacity" TargetName="Arrow"  Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{DynamicResource colorCmbWhiteLine_H}" />
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource colorCmbWhite_H}" />
                            <Setter Property="Opacity" TargetName="Arrow"  Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{DynamicResource colorCmbWhiteLine_S}" />
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource colorCmbWhite_S}" />
                            <Setter Property="Opacity" TargetName="Arrow"  Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{DynamicResource colorCmbWhiteLine_S}" />
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource colorCmbWhite_S}" />
                            <Setter TargetName="Arrow" Property="Data" Value="{DynamicResource icoCmbArrow_Up}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity"  Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="tgb_cmbWhite_F" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" BorderThickness="1" BorderBrush="{DynamicResource colorCmbWhiteLine_S}" Background="{DynamicResource colorCmbWhite_H}" SnapsToDevicePixels="true">
                        <Grid HorizontalAlignment="Right" Width="32">
                            <Path x:Name="Arrow" Data="{StaticResource icoCmbArrow_Down}" Fill="{DynamicResource colorIcon}" Stretch="Fill" Opacity="1" Width="12" Height="7" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="cmbGeneral" TargetType="{x:Type ComboBox}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblCmb_S}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource cmbGeneralItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Microsoft_Windows_Themes1:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource colorBgListWhiteLine}" BorderThickness="1" Background="{DynamicResource colorBgListWhite}" Margin="0,2">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes1:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton Name="btn" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource tgb_cmbGeneral}" />
                        <Label x:Name="InternalWatermarkLabel" Margin="12,0" Content="{TemplateBinding Tag}" Visibility="Collapsed" Focusable="False" Foreground="{DynamicResource colorLblBtn}" Opacity="0.7" VerticalAlignment="Center" />
                        <ContentPresenter Margin="18,0" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="Left" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Style" TargetName="btn" Value="{StaticResource tgb_cmbGeneral_F}" />
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                            <Setter Property="Color" TargetName="Shdw" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="InternalWatermarkLabel" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="Template" Value="{DynamicResource cmbGeneralEditable}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="txtComboEditable" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="32" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblTxb}" />
        <Setter Property="CaretBrush" Value="{DynamicResource colorLblTxb}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource colorLblTxbSelection}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="12,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Name="Bd"  BorderBrush="{DynamicResource colorTxbLine_N}" BorderThickness="1">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" VerticalAlignment="Center" HorizontalAlignment="Left" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource colorTxbLine_H}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource colorTxbLine_P}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource colorTxbLine_P}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="cmbGeneralEditable" TargetType="{x:Type ComboBox}">
        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Microsoft_Windows_Themes1:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource colorBgListLine}" BorderThickness="1" Background="{DynamicResource colorBgList}" Margin="0,2">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Microsoft_Windows_Themes1:SystemDropShadowChrome>
            </Popup>
            <ToggleButton Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource tgb_cmbGeneral}" />
            <Label x:Name="InternalWatermarkLabel" Margin="12,0" Content="{TemplateBinding Tag}" Visibility="Hidden" Focusable="False" Foreground="{DynamicResource colorLblBtn}" Opacity="0.7" VerticalAlignment="Center" />
            <ContentPresenter Margin="18,0" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="Left" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />

            <TextBox x:Name="PART_EditableTextBox" Grid.ColumnSpan="2" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource txbComboEditable}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                <Setter Property="Color" TargetName="Shdw" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" />
                    <Condition Property="Text" Value="" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Visibility" TargetName="InternalWatermarkLabel" Value="Visible" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="cmbWhiteEditable" TargetType="{x:Type ComboBox}">
        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Microsoft_Windows_Themes1:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource colorBgListLine}" BorderThickness="1" Background="{DynamicResource colorBgList}" Margin="0,2">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Microsoft_Windows_Themes1:SystemDropShadowChrome>
            </Popup>
            <ToggleButton Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource tgb_cmbWhite}" />
            <Label x:Name="InternalWatermarkLabel" Margin="12,0" Content="{TemplateBinding Tag}" Visibility="Hidden" Focusable="False" Foreground="{DynamicResource colorLblBtn}" Opacity="0.7" VerticalAlignment="Center" />
            <ContentPresenter Margin="18,0" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="Left" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
            <TextBox x:Name="PART_EditableTextBox" Grid.ColumnSpan="2" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource txbComboEditableWhite}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                <Setter Property="Color" TargetName="Shdw" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" />
                    <Condition Property="Text" Value="" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Visibility" TargetName="InternalWatermarkLabel" Value="Visible" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="txbComboEditable" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    </Style>

    <Style x:Key="txbComboEditableWhite" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource colorCmbWhite_N}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    </Style>
    
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="cmbGeneralItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource colorLblCmb_N}" />
        <Setter Property="Height" Value="28" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Background="{DynamicResource colorBgTableItem_N}" SnapsToDevicePixels="true">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Left" Margin="14,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="1" Fill="{DynamicResource colorDivListItem}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource colorMainGrd}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorLblCmb_S}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource colorBgTableItem_H}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource colorMainGrd}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorLblCmb_S}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="cmbWhiteItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource colorLblCmbWhite_N}" />
        <Setter Property="Height" Value="28" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Background="{DynamicResource colorBgTableWhiteItem_N}" SnapsToDevicePixels="true">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Left" Margin="14,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="1" Fill="{DynamicResource colorDivListItem}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource colorMainGrd}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorLblCmbWhite_S}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource colorBgTableWhiteItem_H}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource colorMainGrd}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorLblCmbWhite_S}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ScrollBar-->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{DynamicResource colorTransparent}" />
        <Setter Property="BorderBrush" Value="{DynamicResource colorTransparent}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Rectangle Name="bg" Grid.RowSpan="3" Fill="{DynamicResource colorBgScr}" />
                        <RepeatButton Grid.Row="0" Command="ScrollBar.LineUpCommand" Height="20"  Style="{DynamicResource btnscr_ViewerToolPanel}">
                            <Path Data="{DynamicResource icoSingleArrow_Up}" Stretch="Fill" Width="12" Height="7" Fill="{DynamicResource colorListPageNav}" />
                        </RepeatButton>
                        <RepeatButton Grid.Row="2" Command="ScrollBar.LineDownCommand" Height="20" Style="{DynamicResource btnscr_ViewerToolPanel}">
                            <Path Data="{DynamicResource icoSingleArrow_Down}" Stretch="Fill" Width="12" Height="7" Fill="{DynamicResource colorListPageNav}" />
                        </RepeatButton>
                        <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand" Style="{DynamicResource ScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Margin="4" Style="{DynamicResource scrVBarThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand" Style="{DynamicResource ScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Name="bg" Grid.ColumnSpan="3" Fill="{DynamicResource colorBgScr}" />
                                <RepeatButton Grid.Column="0" Command="ScrollBar.LineLeftCommand" Width="20" Style="{DynamicResource btnscr_ViewerToolPanel}">
                                    <Path Data="{DynamicResource icoSingleArrow_Left}" Stretch="Fill" Height="12" Width="7" Fill="{DynamicResource colorListPageNav}" />
                                </RepeatButton>
                                <RepeatButton Grid.Column="2" Command="ScrollBar.LineRightCommand" Width="20" Style="{DynamicResource btnscr_ViewerToolPanel}">
                                    <Path Data="{DynamicResource icoSingleArrow_Right}" Stretch="Fill" Height="12" Width="7" Fill="{DynamicResource colorListPageNav}" />
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{DynamicResource ScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Margin="4,6" Style="{DynamicResource scrHBarThumb}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageRightCommand" Style="{DynamicResource ScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="scrVBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{DynamicResource colorBgScrThumb_N}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBgScrThumb_H}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBgScrThumb_P}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="scrHBarThumb" TargetType="{x:Type Thumb}">
        <Setter  Property="Background" Value="{DynamicResource colorBgScrThumb_N}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBgScrThumb_H}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBgScrThumb_P}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="scrBar_withoutButton" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{DynamicResource colorTransparent}" />
        <Setter Property="BorderBrush" Value="{DynamicResource colorTransparent}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Rectangle Name="bg" Grid.RowSpan="3" Fill="{DynamicResource colorBgScr}" Margin ="0,-4,0,0" />
                        <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand" Style="{DynamicResource ScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Margin="6,4" Style="{DynamicResource scrVBarThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand" Style="{DynamicResource ScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid>
                                <Rectangle Name="bg" Grid.RowSpan="3" Fill="{DynamicResource colorBgScr}" />
                                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="False">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{DynamicResource ScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Margin="4,6" Style="{DynamicResource scrVBarThumb}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{DynamicResource ScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region ScrollViewer-->

    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="1,0,0,0" Grid.RowSpan="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
                            <ScrollViewer DockPanel.Dock="Top" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="{TemplateBinding Background}">
                                <GridViewHeaderRowPresenter AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{DynamicResource lsvMainList_ColumnHeader}"
                                                            ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Content="{TemplateBinding Content}"
                                                    KeyboardNavigation.DirectionalNavigation="Local" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" />
                        </DockPanel>
                        <ScrollBar Style="{DynamicResource ResourceKey=scrBar_withoutButton}" x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Height="22" VerticalAlignment="Stretch" Margin="0" Opacity="1" Background="{x:Null}" />
                        <ScrollBar Style="{DynamicResource ResourceKey=scrBar_withoutButton}" x:Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Margin="0,40,0,0" Width="22" HorizontalAlignment="Stretch" Opacity="1" />
                        <Rectangle Grid.Column="1" Fill="{DynamicResource colorBgScr}" Margin="0" Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="scrViewer_lsbGeneral" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter />
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Height="20" VerticalAlignment="Stretch" Margin="0" Opacity="1" Background="{x:Null}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="20" HorizontalAlignment="Stretch" Opacity="1" />
                        <Rectangle Grid.Column="1" Fill="{DynamicResource colorBgScr}" Margin="0" Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="scrViewerToolPanel" TargetType="{x:Type ScrollViewer}">
        <Setter Property="CanContentScroll" Value="False" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="2" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="4" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Row="2" Width="400" HorizontalAlignment="Stretch" Template="{DynamicResource scrVbar_ViewerToolPanel}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="scrVbar_ViewerToolPanel" TargetType="{x:Type ScrollBar}">
        <Grid Height="auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="3" Fill="{DynamicResource colorDivScrollButton}" Height="1" VerticalAlignment="Top" />
            <RepeatButton Grid.Column="0" Height="28" Command="ScrollBar.LineUpCommand" Style="{DynamicResource btnscr_ViewerToolPanel}">
                <Path Data="{DynamicResource icoSingleArrow_Up}" Stretch="Fill" Width="12" Height="7" Fill="{Binding RelativeSource={RelativeSource AncestorType=RepeatButton}, Path=Foreground}" />
            </RepeatButton>
            <Track x:Name="PART_Track" Visibility="Hidden" />
            <RepeatButton Grid.Column="2" Height="28" Command="ScrollBar.LineDownCommand" Style="{DynamicResource btnscr_ViewerToolPanel}">
                <Path Data="{DynamicResource icoSingleArrow_Down}" Stretch="Fill" Width="12" Height="7" Fill="{Binding RelativeSource={RelativeSource AncestorType=RepeatButton}, Path=Foreground}" />
            </RepeatButton>
        </Grid>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Slider -->
    <Style x:Key="sldGeneral" TargetType="{x:Type Slider}">
        <Setter Property="IsSnapToTickEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Border Height="8" CornerRadius="6" Background="{DynamicResource colorBgSld}" Grid.Column="1" Margin="15,0" />
                        <Track Grid.Column="1" x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="Slider.DecreaseLarge" Margin="15,0,-15,0" Template="{DynamicResource btn_sldGeneralTrackDecrease}" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb  Margin="0" Style="{DynamicResource sldGeneralThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="Slider.IncreaseLarge" Margin="0,0,15,0"  Template="{DynamicResource btn_sldGeneralTrackIncrease}" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="btn_sldGeneralTrackDecrease" TargetType="{x:Type RepeatButton}">
        <Border CornerRadius="6" Height="8" Background="{DynamicResource colorBgSldChunk}" />
    </ControlTemplate>
    <ControlTemplate x:Key="btn_sldGeneralTrackIncrease" TargetType="{x:Type RepeatButton}">
        <Border CornerRadius="6" Height="8" Background="{DynamicResource colorTransparent}" />
    </ControlTemplate>

    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        <GradientStop Color="#ABADB3" Offset="0.05" />
        <GradientStop Color="#E2E3EA" Offset="0.07" />
        <GradientStop Color="#E3E9EF" Offset="1" />
    </LinearGradientBrush>
    <!--#endregion-->

    <!--#region Tool Tip -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="10,4" />
        <Setter Property="Background" Value="#222222" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblBtn}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource colorBtnViewerToolLine_S}" BorderThickness="1">
                        <ContentPresenter Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TextBox-->
    <Style x:Key="txtNormal" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Microsoft_Windows_Themes1:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Microsoft_Windows_Themes1:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="txtMessage" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblMessage}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="MinWidth" Value="320" />
    </Style>
    <Style x:Key="txtInputData" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="32" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
    </Style>
    <Style x:Key="txtInputData_Gray" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="32" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="Background" Value="#cfcfcf" />
    </Style>
    <Style x:Key="txtLoading" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource colorLblPrgRing}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <Style x:Key="txtInputBlack" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region RichTextBox-->
    <Style x:Key="rtbNormal" BasedOn="{x:Null}" TargetType="{x:Type RichTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Microsoft_Windows_Themes1:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                                             BorderThickness="{TemplateBinding BorderThickness}"
                                                             Background="{TemplateBinding Background}"
                                                             RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                             RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                                             SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Microsoft_Windows_Themes1:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ListBox-->
    <Style x:Key="lsbNormal" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource colorBgTable}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblMessage}" />
    </Style>
    <!--#endregion-->

    <!--#region DataGrid-->
    <Style x:Key="dtgNormal" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource colorBgTable}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    </Style>
    <Style x:Key="dtgNormal_CellStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Foreground" Value="{DynamicResource colorLblListItem_N}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Height" Value="28" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Background" Value="{DynamicResource colorBgTable}" />
        <Setter Property="BorderBrush" Value="{DynamicResource colorDivTableItem}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="TextBlock.TextTrimming" Value="None" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBgTableItem_H}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#005691" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="dtgNormal_ColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource colorBgTableHeader}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="TextBlock.TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblListHeader}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid MinWidth="30" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="ContentHeader" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Width="{TemplateBinding Width}" Margin="10,0,0,0" />
                        <Thumb x:Name="PART_HeaderGripper" Grid.Column="1" Style="{DynamicResource lsvMainList_ColumnHeaderThumb}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ListView-->
    <Style x:Key="lsvMainList" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{DynamicResource colorBgTable}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="myScrollViewer" Grid.Row="1" Padding="{TemplateBinding Padding}" Background="Transparent" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lsvMainListItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource colorLblListItem_N}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Background" Value="{DynamicResource colorBgTableItem_N}" />
        <Setter Property="BorderBrush" Value="{DynamicResource colorDivTableItem}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="TextBlock.TextTrimming" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <GridViewRowPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBgTableItem_H}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorMainGrd}" />
                <Setter Property="Foreground" Value="{DynamicResource colorLblListItem_S}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="lsvMainList_ColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource colorBgTableHeader}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="TextBlock.TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblListHeader}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid MinWidth="30" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="ContentHeader" Grid.Column="0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Width="{TemplateBinding Width}"
                                          Margin="10,0,0,0" />
                        <Thumb x:Name="PART_HeaderGripper" Grid.Column="1" Style="{DynamicResource lsvMainList_ColumnHeaderThumb}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lsvMainList_ColumnHeaderThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="10" />
        <Setter Property="Cursor" Value="ScrollWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Width="{TemplateBinding Width}" Background="{DynamicResource colorTransparent}">
                        <Rectangle Width="1" Height="18" Fill="{DynamicResource colorDivTableHeader}" HorizontalAlignment="Right" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lsvGeneral" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{DynamicResource colorBgTable}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource lsvGeneralItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="myScrollViewer" Grid.Row="1" Padding="{TemplateBinding Padding}" Background="Transparent" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lsvGeneralItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource colorLblListItem_N}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Height" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Background" Value="{DynamicResource colorBgTableItem_N}" />
        <Setter Property="BorderBrush" Value="{DynamicResource colorDivTableItem}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <GridViewRowPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBgTableItem_H}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorMainGrd}" />
                <Setter Property="Foreground" Value="{DynamicResource colorLblListItem_S}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--add hans kim (alarm list)-->
    <Style x:Key="lsvColumnHeaderLeft" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource colorBgTableHeader}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="TextBlock.TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblListHeader}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid MinWidth="30" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="ContentHeader" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Width="{TemplateBinding Width}" Margin="10,0,0,0" />
                        <Thumb x:Name="PART_HeaderGripper" Grid.Column="1" Style="{DynamicResource lsvMainList_ColumnHeaderThumb}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lsvColumnHeaderCenter" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource colorBgTableHeader}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="TextBlock.TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblListHeader}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid MinWidth="30" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="ContentHeader" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="{TemplateBinding Width}" Margin="10,0,0,0" />
                        <Thumb x:Name="PART_HeaderGripper" Grid.Column="1" Style="{DynamicResource lsvMainList_ColumnHeaderThumb}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lsvColumnHeaderRight" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource colorBgTableHeader}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="TextBlock.TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblListHeader}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid MinWidth="30" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="ContentHeader" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Right" Width="{TemplateBinding Width}" Margin="10,0,0,0" />
                        <Thumb x:Name="PART_HeaderGripper" Grid.Column="1" Style="{DynamicResource lsvMainList_ColumnHeaderThumb}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lsvColumnHeaderStretch" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource colorBgTableHeader}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="TextBlock.TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblListHeader}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid MinWidth="30" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="ContentHeader" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="{TemplateBinding Width}" Margin="10,0,0,0" />
                        <Thumb x:Name="PART_HeaderGripper" Grid.Column="1" Style="{DynamicResource lsvMainList_ColumnHeaderThumb}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Slider-->

    <Style x:Key="SliderStyle_Cell" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#FFC4C4C4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Grid>
                            <Border x:Name="TrackBackground" BorderThickness="1" CornerRadius="1" Height="Auto" Margin="0" Grid.Row="1" VerticalAlignment="Stretch">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}" Width="132" Height="154" Margin="-66,-92,-66,-90" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Width" Value="11" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="grid" Margin="0" Background="Transparent">
                        <!--<Image x:Name="image1" Source="/Main Application;component/Resources/System/Graphic6.png" Stretch="Fill" Width="132" Height="154" Opacity="0" />
                        <Image x:Name="image" Source="/Main Application;component/Resources/System/Graphic6_S.png" Stretch="Fill" Width="132" Height="154" Opacity="0" />
                        <Image x:Name="image2" Source="/Main Application;component/Resources/System/Graphic6_S.png" Stretch="Fill" Width="132" Height="154" Opacity="0" />-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnJog" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource colorBgScrThumb_H }" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblBtn}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBgScrThumb_N}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorBgScrThumb_P}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btnJogBlue" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource colorBgDialogLineENC}" />
        <Setter Property="Foreground" Value="{DynamicResource colorLblBtn}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe UI}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorENC}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorENC}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
</ResourceDictionary>
